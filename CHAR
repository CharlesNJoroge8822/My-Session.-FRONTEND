// import React, { useState, useEffect } from 'react';

// function App() {
//   // State to store the data for each model
//   const [users, setUsers] = useState([]);
//   const [sessions, setSessions] = useState([]);
//   const [notes, setNotes] = useState([]);
  
//   // States for input fields to add new data
//   const [newUser, setNewUser] = useState({ name: '', email: '', password: '' });
//   const [newSession, setNewSession] = useState({ title: '', date: '', duration: '', user_id: '' });
//   const [newNote, setNewNote] = useState({ note_context: '', session_id: '' });

//   // Fetch users, study sessions, and session notes when the component mounts
//   useEffect(() => {
//     fetchData();
//   }, []); // Empty array ensures this effect runs once when the component mounts

//   // Fetch function to get all the data
//   const fetchData = () => {
//     // Fetch Users
//     fetch('http://127.0.0.1:8001/users/')
//       .then((response) => response.json())
//       .then((data) => setUsers(data))
//       .catch((error) => console.error('Error fetching users:', error));

//     // Fetch Study Sessions
//     fetch('http://127.0.0.1:8001/study_sessions/')
//       .then((response) => response.json())
//       .then((data) => setSessions(data))
//       .catch((error) => console.error('Error fetching study sessions:', error));

//     // Fetch Session Notes
//     fetch('http://127.0.0.1:8001/session_notes/')
//       .then((response) => response.json())
//       .then((data) => setNotes(data))
//       .catch((error) => console.error('Error fetching session notes:', error));
//   };

//   // Add User
//   const addUser = () => {
//     fetch('http://127.0.0.1:8001/users/', {
//       method: 'POST',
//       headers: { 'Content-Type': 'application/json' },
//       body: JSON.stringify(newUser),
//     })
//       .then((response) => response.json())
//       .then(() => {
//         fetchData(); // Refresh data after adding user
//         setNewUser({ name: '', email: '', password: '' }); // Reset form
//       })
//       .catch((error) => console.error('Error adding user:', error));
//   };

//   // Add Study Session
//   const addSession = () => {
//     fetch('http://127.0.0.1:8001/study_sessions/', {
//       method: 'POST',
//       headers: { 'Content-Type': 'application/json' },
//       body: JSON.stringify(newSession),
//     })
//       .then((response) => response.json())
//       .then(() => {
//         fetchData(); // Refresh data after adding session
//         setNewSession({ title: '', date: '', duration: '', user_id: '' }); // Reset form
//       })
//       .catch((error) => console.error('Error adding session:', error));
//   };

//   // Add Session Note
//   const addNote = () => {
//     fetch('http://127.0.0.1:8001/session_notes/', {
//       method: 'POST',
//       headers: { 'Content-Type': 'application/json' },
//       body: JSON.stringify(newNote),
//     })
//       .then((response) => response.json())
//       .then(() => {
//         fetchData(); // Refresh data after adding note
//         setNewNote({ note_context: '', session_id: '' }); // Reset form
//       })
//       .catch((error) => console.error('Error adding note:', error));
//   };

//   // Delete User
//   const deleteUser = (userId) => {
//     fetch(`http://127.0.0.1:8001/users/${userId}`, {
//       method: 'DELETE',
//     })
//       .then(() => fetchData()) // Refresh data after deleting user
//       .catch((error) => console.error('Error deleting user:', error));
//   };

//   // Delete Study Session
//   const deleteSession = (sessionId) => {
//     fetch(`http://127.0.0.1:8001/study_sessions/${sessionId}`, {
//       method: 'DELETE',
//     })
//       .then(() => fetchData()) // Refresh data after deleting session
//       .catch((error) => console.error('Error deleting session:', error));
//   };

//   // Delete Session Note
//   const deleteNote = (noteId) => {
//     fetch(`http://127.0.0.1:8001/session_notes/${noteId}`, {
//       method: 'DELETE',
//     })
//       .then(() => fetchData()) // Refresh data after deleting note
//       .catch((error) => console.error('Error deleting note:', error));
//   };

//   return (
//     <div>
//       <h1>User List</h1>
//       <ul>
//         {users.length > 0 ? (
//           users.map((user) => (
//             <li key={user.id}>
//               <strong>{user.name}</strong> - {user.email}
//               <button onClick={() => deleteUser(user.id)}>Delete</button>
//             </li>
//           ))
//         ) : (
//           <li>No users available</li>
//         )}
//       </ul>

//       <h2>Add User</h2>
//       <input
//         type="text"
//         value={newUser.name}
//         placeholder="Name"
//         onChange={(e) => setNewUser({ ...newUser, name: e.target.value })}
//       />
//       <input
//         type="email"
//         value={newUser.email}
//         placeholder="Email"
//         onChange={(e) => setNewUser({ ...newUser, email: e.target.value })}
//       />
//       <input
//         type="password"
//         value={newUser.password}
//         placeholder="Password"
//         onChange={(e) => setNewUser({ ...newUser, password: e.target.value })}
//       />
//       <button onClick={addUser}>Add User</button>

//       <h1>Study Sessions</h1>
//       <ul>
//         {sessions.length > 0 ? (
//           sessions.map((session) => (
//             <li key={session.id}>
//               <strong>{session.title}</strong> - {session.date} - {session.duration} minutes
//               <button onClick={() => deleteSession(session.id)}>Delete</button>
//             </li>
//           ))
//         ) : (
//           <li>No study sessions available</li>
//         )}
//       </ul>

//       <h2>Add Study Session</h2>
//       <input
//         type="text"
//         value={newSession.title}
//         placeholder="Title"
//         onChange={(e) => setNewSession({ ...newSession, title: e.target.value })}
//       />
//       <input
//         type="datetime-local"
//         value={newSession.date}
//         placeholder="Date"
//         onChange={(e) => setNewSession({ ...newSession, date: e.target.value })}
//       />
//       <input
//         type="number"
//         value={newSession.duration}
//         placeholder="Duration (in minutes)"
//         onChange={(e) => setNewSession({ ...newSession, duration: e.target.value })}
//       />
//       <input
//         type="number"
//         value={newSession.user_id}
//         placeholder="User ID"
//         onChange={(e) => setNewSession({ ...newSession, user_id: e.target.value })}
//       />
//       <button onClick={addSession}>Add Session</button>

//       <h1>Session Notes</h1>
//       <ul>
//         {notes.length > 0 ? (
//           notes.map((note) => (
//             <li key={note.id}>
//               <strong>Note:</strong> {note.note_context}
//               <button onClick={() => deleteNote(note.id)}>Delete</button>
//             </li>
//           ))
//         ) : (
//           <li>No session notes available</li>
//         )}
//       </ul>

//       <h2>Add Session Note</h2>
//       <input
//         type="text"
//         value={newNote.note_context}
//         placeholder="Note Content"
//         onChange={(e) => setNewNote({ ...newNote, note_context: e.target.value })}
//       />
//       <input
//         type="number"
//         value={newNote.session_id}
//         placeholder="Session ID"
//         onChange={(e) => setNewNote({ ...newNote, session_id: e.target.value })}
//       />
//       <button onClick={addNote}>Add Note</button>
//     </div>
//   );
// }

// export default App;



